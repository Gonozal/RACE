class CharacterDecorator < ApplicationDecorator
  decorates :character
  decorates_association :corporation

  # Accessing Helpers
  #   You can access any helper via a proxy
  #
  #   Normal Usage: helpers.number_to_currency(2)
  #   Abbreviated : h.number_to_currency(2)
  #
  #   Or, optionally enable "lazy helpers" by including this module:
  #     include Draper::LazyHelpers
  #   Then use the helpers with no proxy:
  #     number_to_currency(2)

  # Defining an Interface
  #   Control access to the wrapped subject's methods using one of the following:
  #
  #   To allow only the listed methods (whitelist):
  #     allows :method1, :method2
  #
  #   To allow everything except the listed methods (blacklist):
  #     denies :method1, :method2

  # Presentation Methods
  #   Define your own instance methods, even overriding accessors
  #   generated by ActiveRecord:
  #
  #   def created_at
  #     h.content_tag :span, time.strftime("%a %m/%d/%y"),
  #                   :class => 'timestamp'
  #   end
  def portrait_path(size)
    path = "/images/api_images/characters/"
    if FileTest.exist?("#{Rails.root}/public#{path}#{id}_#{size}.jpg")
      img_url = "#{path}#{id}_#{size}.jpg"
    else
      img_url = "#{path}000000000_#{size}.jpg"
    end
  end

  def date_of_birth
    character.date_of_birth.strftime("%m/%d/%Y %H:%M")
  end

  def isk_string
    h.number_to_currency(balance, unit: "ISK", seperator: ",", delimeter: ".", format: "%n %u")
  end
end
